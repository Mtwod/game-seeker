{"version":3,"sources":["config/index.js","store/colorTheme/atom.js","store/colorTheme/index.js","components/ColorThemeSwitch/sun-logo.png","components/ColorThemeSwitch/moon-logo.png","components/ColorThemeSwitch/index.jsx","utils/arrayOfObject.js","components/GameCard/index.jsx","api/config/index.js","utils/date.js","api/games/index.js","components/GameCardList/index.jsx","components/Header/index.jsx","pages/Home/index.jsx","App.jsx","index.jsx"],"names":["CONFIG","LOCAL_STORAGE_KEY_COLOR_THEME","defaultColorTheme","localStorage","getItem","colorTheme","atom","key","default","ColorThemeSwitch","useRecoilState","displayedColorTheme","setDisplayedColorTheme","displayedLogo","sunLogo","moonLogo","type","className","onClick","newColorTheme","filter","availableColorTheme","setItem","src","alt","extractListFromArray","array","propertyToExtract","length","reduce","previousValue","currentValue","push","join","GameCard","game","to","background_image","released","genres","name","parent_platforms","map","platform","API_CONFIG","BASE_URL","CATEGORIES","GAMES","KEY","process","PAGE_SIZE","PAGE_NUMBER","pageNumber","ORDER","RELEASED","RELEASED_INVERSED","RATING","RATING_INVERSED","DATES","startDate","endDate","dateFormat","todayDate","dayjs","format","date","today","add","number","dayMonthOrYear","substract","getSoonToBeReleasedGames","a","gamesUrl","fetch","method","headers","response","json","data","soonToBeReleasedGames","results","GameCardList","useState","games","setGames","useEffect","fetchedGames","id","Header","title","subtitle","Home","App","useRecoilValue","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAIeA,EAJA,CACbC,8BAA+B,+BCE3BC,EAAoBC,aAAaC,QAAQJ,EAAOC,gCAAkC,OCDzEI,EDGIC,YAAK,CACtBC,IAAK,aACLC,QAASN,IEPI,MAA0B,qCCA1B,MAA0B,sC,eCwB1BO,EAjBU,WAAO,IAAD,EACyBC,YAAeL,GADxC,mBACtBM,EADsB,KACDC,EADC,KAEvBC,EAAwC,SAAxBF,EAAiCG,EAAUC,EAQjE,OACE,wBAAQC,KAAK,SAASC,UAAU,mBAAmBC,QAP5B,WACvB,IAAMC,EAAgB,CAAC,QAAS,QAAQC,QAAO,SAACC,GAAD,OAAyBA,IAAwBV,KAAqB,GACrHR,aAAamB,QAAQtB,EAAOC,8BAA+BkB,GAC3DP,EAAuBO,IAIvB,SACE,qBAAKI,IAAKV,EAAeW,IAAI,MAAMP,UAAU,8B,uCCPpCQ,G,MAVc,SAACC,EAAOC,GACnC,OAAqB,IAAjBD,EAAME,OAAqB,gBACxBF,EACJG,QAAO,SAACC,EAAeC,GAEtB,OADAD,EAAcE,KAAKD,EAAaJ,IACzBG,IACN,IACFG,KAAK,QCYKC,EAhBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,oBAAIlB,UAAU,WAAd,SACE,eAAC,IAAD,CAAMmB,GAAG,IAAT,UACE,qBAAKnB,UAAU,kBAAkBM,IAAKY,EAAKE,iBAAkBb,IAAI,SACjE,oBAAGP,UAAU,uBAAb,mCACqBkB,EAAKG,UAD1B,qBAEiBb,EAAqBU,EAAKI,OAAQ,YAEnD,mBAAGtB,UAAU,kBAAb,SAAgCkB,EAAKK,OACrC,mBAAGvB,UAAU,qBAAb,SACGQ,EAAqBU,EAAKM,iBAAiBC,KAAI,SAACC,GAAD,OAAcA,EAASA,YAAW,gBCM3EC,EAVI,CACjBC,SAAU,2BACVC,WANiB,CACjBC,MAAO,SAMPC,IAAI,QAAD,OAAUC,oCACbC,UAAW,eACXC,YAAa,SAACC,GAAD,sBAAyBA,IACtCC,MAjBY,CACZC,SAAU,qBACVC,kBAAmB,sBACnBC,OAAQ,mBACRC,gBAAiB,qBAcjBC,MAAO,SAACC,EAAWC,GAAZ,uBAAkCD,EAAlC,YAA+CC,K,iBChBlDC,EAAa,aACbC,EAAYC,MAAQC,OAAOH,GAYlBI,EAVF,CACXC,MAAOJ,EACPK,IAAK,SAACC,GAAD,IAASC,EAAT,uDAA0B,MAAOV,EAAjC,uDAA6CG,EAA7C,OAA2DC,IAAMJ,GACnEQ,IAAIC,EAAQC,GACZL,OAAOH,IACVS,UAAW,SAACF,EAAQC,EAAgBV,GAAzB,OAAuCI,IAAMJ,GACrDW,UAAUF,EAAQC,GAClBL,OAAOH,KCaGU,EAtBe,uCAAG,kCAAAC,EAAA,6DACzBC,EADyB,UACX7B,EAAWC,SAC3BD,EAAWE,WAAWC,MACtBH,EAAWI,IACXJ,EAAWM,UACXN,EAAWO,YAAY,GACvBP,EAAWS,MAAMC,SACjBV,EAAWc,MAAMO,EAAKC,MAAOD,EAAKE,IAAI,EAAG,UAPd,SASRO,MAAMD,EAAU,CACrCE,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAZW,cASzBC,EATyB,gBAeZA,EAASC,OAfG,cAezBC,EAfyB,OAiBzBC,EAAwBD,EAAKE,QAjBJ,kBAmBxBD,GAnBwB,2CAAH,qDCuBfE,EArBM,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAQzB,OALAC,oBAAS,sBAAC,4BAAAd,EAAA,sEACmBD,IADnB,OACFgB,EADE,OAERF,EAASE,GAFD,2CAGP,IAGgB,IAAjBH,EAAMxD,OACJ,mDAEA,oBAAIX,UAAU,eAAd,SACGmE,EAAM1C,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKqD,UCL3BC,G,MAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,sBAAK1E,UAAU,SAAf,UACE,oBAAIA,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMmB,GAAG,IAAInB,UAAU,sBAAvB,SACGyE,MAGL,mBAAGzE,UAAU,mBAAb,SAAiC0E,SCQtBC,G,MAbF,kBACX,sBAAK3E,UAAU,OAAf,UACE,yBAAQA,UAAU,eAAlB,UACE,cAAC,EAAD,CACEyE,MAAM,cACNC,SAAS,sCAEX,cAAC,EAAD,OAEF,cAAC,EAAD,S,OCaWE,G,MAhBH,WACV,IAAMlF,EAAsBmF,YAAezF,GAE3C,OACE,cAAC,IAAD,CAAQ0F,SAAS,eAAjB,SACE,qBAAK9E,UAAS,cAASN,GAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOqF,KAAK,IAAZ,SACE,cAAC,EAAD,cCdZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.6db3f379.chunk.js","sourcesContent":["const CONFIG = {\n  LOCAL_STORAGE_KEY_COLOR_THEME: 'game-seeker-app__colorTheme',\n};\n\nexport default CONFIG;\n","import { atom } from 'recoil';\nimport CONFIG from 'config';\n\nconst defaultColorTheme = localStorage.getItem(CONFIG.LOCAL_STORAGE_KEY_COLOR_THEME) || 'dark';\n\nconst colorTheme = atom({\n  key: 'colorTheme', // unique ID (with respect to other atoms/selectors)\n  default: defaultColorTheme, // default value (aka initial value)\n});\n\nexport default colorTheme;\n","import colorTheme from './atom';\n\nexport default colorTheme;\n","export default __webpack_public_path__ + \"static/media/sun-logo.b9434b94.png\";","export default __webpack_public_path__ + \"static/media/moon-logo.e117be6b.png\";","import CONFIG from 'config';\nimport { useRecoilState } from 'recoil';\nimport colorTheme from 'store/colorTheme';\nimport sunLogo from './sun-logo.png';\nimport moonLogo from './moon-logo.png';\nimport './style.scss';\n\nconst ColorThemeSwitch = () => {\n  const [displayedColorTheme, setDisplayedColorTheme] = useRecoilState(colorTheme);\n  const displayedLogo = displayedColorTheme === 'dark' ? sunLogo : moonLogo;\n\n  const switchColorTheme = () => {\n    const newColorTheme = ['light', 'dark'].filter((availableColorTheme) => availableColorTheme !== displayedColorTheme)[0];\n    localStorage.setItem(CONFIG.LOCAL_STORAGE_KEY_COLOR_THEME, newColorTheme);\n    setDisplayedColorTheme(newColorTheme);\n  };\n\n  return (\n    <button type=\"button\" className=\"ColorThemeSwitch\" onClick={switchColorTheme}>\n      <img src={displayedLogo} alt=\"sun\" className=\"ColorThemeSwitch__logo\" />\n    </button>\n  );\n};\n\nexport default ColorThemeSwitch;\n","// propertyToExtract must be a string\n\nconst extractListFromArray = (array, propertyToExtract) => {\n  if (array.length === 0) return 'Not specified';\n  return array\n    .reduce((previousValue, currentValue) => {\n      previousValue.push(currentValue[propertyToExtract]);\n      return previousValue;\n    }, [])\n    .join(', ');\n};\n\nexport default extractListFromArray;\n","// import exampleGameImage from 'Cyberpunk2077_bgimg.jpg';\nimport { Link } from 'react-router-dom';\nimport './style.scss';\nimport extractListFromArray from 'utils/arrayOfObject';\n\nconst GameCard = ({ game }) => (\n  <li className=\"GameCard\">\n    <Link to=\"/\">\n      <img className=\"GameCard__image\" src={game.background_image} alt=\"game\" />\n      <p className=\"GameCard__imageHover\">\n        {`Release date : ${game.released}`}\n        {`\\nGenres : ${extractListFromArray(game.genres, 'name')}`}\n      </p>\n      <p className=\"GameCard__title\">{game.name}</p>\n      <p className=\"GameCard__platform\">\n        {extractListFromArray(game.parent_platforms.map((platform) => platform.platform), 'name')}\n      </p>\n    </Link>\n  </li>\n);\n\nexport default GameCard;\n","const order = {\n  RELEASED: '&ordering=released',\n  RELEASED_INVERSED: '&ordering=-released',\n  RATING: '&ordering=rating',\n  RATING_INVERSED: '&ordering=-rating',\n};\n\nconst categories = {\n  GAMES: 'games',\n};\n\nconst API_CONFIG = {\n  BASE_URL: 'https://api.rawg.io/api/',\n  CATEGORIES: categories,\n  KEY: `?key=${process.env.REACT_APP_RAWG_API_KEY}`,\n  PAGE_SIZE: '&page_size=9',\n  PAGE_NUMBER: (pageNumber) => `&page=${pageNumber}`,\n  ORDER: order,\n  DATES: (startDate, endDate) => `&dates=${startDate},${endDate}`,\n};\n\nexport default API_CONFIG;\n","import dayjs from 'dayjs';\n\nconst dateFormat = 'YYYY-MM-DD';\nconst todayDate = dayjs().format(dateFormat);\n\nconst date = {\n  today: todayDate,\n  add: (number, dayMonthOrYear = 'day', startDate = todayDate) => dayjs(startDate)\n    .add(number, dayMonthOrYear)\n    .format(dateFormat),\n  substract: (number, dayMonthOrYear, startDate) => dayjs(startDate)\n    .substract(number, dayMonthOrYear)\n    .format(dateFormat),\n};\n\nexport default date;\n","import API_CONFIG from 'api/config';\nimport date from 'utils/date';\n\nconst getSoonToBeReleasedGames = async () => {\n  const gamesUrl = `${API_CONFIG.BASE_URL\n    + API_CONFIG.CATEGORIES.GAMES\n    + API_CONFIG.KEY\n    + API_CONFIG.PAGE_SIZE\n    + API_CONFIG.PAGE_NUMBER(1)\n    + API_CONFIG.ORDER.RELEASED\n    + API_CONFIG.DATES(date.today, date.add(1, 'year'))}`;\n\n  const response = await fetch(gamesUrl, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  const soonToBeReleasedGames = data.results;\n\n  return soonToBeReleasedGames;\n};\n\nexport default getSoonToBeReleasedGames;\n","import './style.scss';\nimport GameCard from 'components/GameCard';\nimport { useEffect, useState } from 'react';\nimport getSoonToBeReleasedGames from 'api/games';\n\nconst GameCardList = () => {\n  const [games, setGames] = useState([]);\n\n  useEffect(async () => {\n    const fetchedGames = await getSoonToBeReleasedGames();\n    setGames(fetchedGames);\n  }, []);\n\n  return (\n    games.length === 0 ? (\n      <p>No game was found!</p>\n    ) : (\n      <ul className=\"GameCardList\">\n        {games.map((game) => (\n          <GameCard game={game} key={game.id} />\n        ))}\n      </ul>\n    )\n  );\n};\n\nexport default GameCardList;\n","import { Link } from 'react-router-dom';\nimport './style.scss';\n\nconst Header = ({ title, subtitle }) => (\n  <div className=\"Header\">\n    <h1 className=\"Header__title\">\n      <Link to=\"/\" className=\"Header__title__link\">\n        {title}\n      </Link>\n    </h1>\n    <p className=\"Header__subtitle\">{subtitle}</p>\n  </div>\n);\n\nexport default Header;\n","import ColorThemeSwitch from 'components/ColorThemeSwitch';\nimport GameCardList from 'components/GameCardList';\nimport Header from 'components/Header';\nimport './style.scss';\n\nconst Home = () => (\n  <div className=\"Home\">\n    <header className=\"Home__header\">\n      <Header\n        title=\"Game Seeker\"\n        subtitle=\"Welcome on my video game website!\"\n      />\n      <ColorThemeSwitch />\n    </header>\n    <GameCardList />\n  </div>\n);\n\nexport default Home;\n","/* eslint-disable no-unused-vars */\nimport Home from 'pages/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport colorTheme from 'store/colorTheme';\nimport 'style.scss';\n\nconst App = () => {\n  const displayedColorTheme = useRecoilValue(colorTheme);\n\n  return (\n    <Router basename=\"/game-seeker\">\n      <div className={`App ${displayedColorTheme}`}>\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}